from py2d.FOVConverter import *
import unittest

class TestFOVConverter(unittest.TestCase):

	def setUp(self):
		self.map_data = [[1,1,1,1,0,0,0,0],
			         [1,0,0,1,0,0,1,0],
			         [1,0,1,1,0,1,1,1],
			         [1,0,1,1,0,0,1,0],
			         [1,1,1,0,0,0,1,0],
			         [0,0,0,0,0,1,1,1],
			         [0,1,1,1,0,0,1,0]]

	def test_convert_tilemap(self):

		obstructors = convert_tilemap(len(self.map_data), len(self.map_data[0]), lambda x,y: self.map_data[x][y], 1,1)

		expected_obstructors = [
					[Vector(1.000000, 1.000000), Vector(4.000000, 1.000000), Vector(4.000000, 2.000000), Vector(2.000000, 2.000000), Vector(2.000000, 3.000000), Vector(1.000000, 3.000000), Vector(1.000000, 1.000000)],
					[Vector(0.000000, 0.000000), Vector(5.000000, 0.000000), Vector(5.000000, 3.000000), Vector(4.000000, 3.000000), Vector(4.000000, 4.000000), Vector(0.000000, 4.000000), Vector(0.000000, 0.000000)],
					[Vector(3.000000, 7.000000), Vector(5.000000, 7.000000), Vector(5.000000, 8.000000), Vector(3.000000, 8.000000), Vector(3.000000, 7.000000)],
					[Vector(0.000000, 4.000000), Vector(4.000000, 4.000000), Vector(4.000000, 3.000000), Vector(5.000000, 3.000000), Vector(5.000000, 0.000000), Vector(7.000000, 0.000000), Vector(7.000000, 1.000000), Vector(6.000000, 1.000000), Vector(6.000000, 4.000000), Vector(7.000000, 4.000000), Vector(7.000000, 6.000000), Vector(6.000000, 6.000000), Vector(6.000000, 5.000000), Vector(5.000000, 5.000000), Vector(5.000000, 6.000000), Vector(3.000000, 6.000000), Vector(3.000000, 5.000000), Vector(2.000000, 5.000000), Vector(2.000000, 6.000000), Vector(1.000000, 6.000000), Vector(1.000000, 7.000000), Vector(2.000000, 7.000000), Vector(2.000000, 8.000000), Vector(0.000000, 8.000000), Vector(0.000000, 4.000000)],
					[Vector(1.000000, 6.000000), Vector(2.000000, 6.000000), Vector(2.000000, 5.000000), Vector(3.000000, 5.000000), Vector(3.000000, 6.000000), Vector(5.000000, 6.000000), Vector(5.000000, 5.000000), Vector(6.000000, 5.000000), Vector(6.000000, 6.000000), Vector(7.000000, 6.000000), Vector(7.000000, 7.000000), Vector(6.000000, 7.000000), Vector(6.000000, 8.000000), Vector(5.000000, 8.000000), Vector(5.000000, 7.000000), Vector(3.000000, 7.000000), Vector(3.000000, 8.000000), Vector(2.000000, 8.000000), Vector(2.000000, 7.000000), Vector(1.000000, 7.000000), Vector(1.000000, 6.000000)],
					[Vector(6.000000, 1.000000), Vector(7.000000, 1.000000), Vector(7.000000, 4.000000), Vector(6.000000, 4.000000), Vector(6.000000, 1.000000)],
					[Vector(6.000000, 7.000000), Vector(7.000000, 7.000000), Vector(7.000000, 8.000000), Vector(6.000000, 8.000000), Vector(6.000000, 7.000000)]
		]

		self.assertEqual(expected_obstructors, obstructors)
		

if __name__ == '__main__':
	unittest.main()
